/*===========================================================================*/
/*                 SANCUS MODULE DMA VIOLATION                               */
/*---------------------------------------------------------------------------*/
/* Test DMA violations by accessing secret SM memory from outside.           */
/*                                                                           */
/*---------------------------------------------------------------------------*/
/*===========================================================================*/

.include "pmem_defs.asm"
.include "sancus_macros.asm"

.set dma_done, DMEM_260
.set foo_secret_start, DMEM_262
.set foo_secret_end, DMEM_268

.global main
main:
    add r2, r1
    clr r15
    mov r15, &dma_done
    disable_wdt
    eint
    sancus_enable #1234, #foo_text_start, #foo_text_end, #foo_secret_start, #foo_secret_end
    br #foo_text_start

wait_for_dma:
    mov #0x1000, r15
1:  mov &dma_done, r14
    tst r14
    jz 1b

    /* ----------------------         END OF TEST        --------------- */
end_of_test:
	mov #0x2000, r15
fail_test:
	br #0xffff

    /* ----------------------         SANCUS MODULE      --------------- */

foo_text_start:
    mov #0xf00d, &foo_secret_start
    br #wait_for_dma
foo_text_value:
    .word 0xcafe
foo_text_end:

    /* ----------------------         INTERRUPT VECTORS  --------------- */

.section .vectors, "a"
.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
.word end_of_test  ; Interrupt  1                      <unused>
.word end_of_test  ; Interrupt  2                      <unused>
.word end_of_test  ; Interrupt  3                      <unused>
.word end_of_test  ; Interrupt  4                      <unused>
.word end_of_test  ; Interrupt  5                      <unused>
.word end_of_test  ; Interrupt  6                      <unused>
.word end_of_test  ; Interrupt  7                      <unused>
.word end_of_test  ; Interrupt  8                      <unused>
.word end_of_test  ; Interrupt  9                      TEST IRQ
.word end_of_test  ; Interrupt 10                      Watchdog timer
.word end_of_test  ; Interrupt 11                      <unused>
.word end_of_test  ; Interrupt 12                      <unused>
.word end_of_test  ; Interrupt 13                      SM_IRQ
.word end_of_test  ; Interrupt 14                      NMI
.word main         ; Interrupt 15 (highest priority)   RESET
